{
    "name": "SideQuest",
    "productName": "SideQuest",
    "version": "0.10.44",
    "description": "A open app store for mobile android based VR devices such as the Levovo Mirage, Oculus Go, Oculus Quest, Vive Focus.",
    "repository": "https://github.com/SideQuestVR/SideQuest.git",
    "license": "UNLICENCED",
    "author": "Shane Harris",
    "main": "build-electron/app.js", 
    "scripts": {
        "concurrently": "concurrently",
        "start": "concurrently \"yarn electron-build && yarn platform-tools && wait-on http-get://localhost:4205/ && cross-env NODE_ENV=dev electron .\" \"cd desktop-app && ng serve --port 4205\"",
        "start:test": "concurrently \"yarn electron-build && yarn platform-tools && wait-on http-get://localhost:4205/ && cross-env NODE_ENV=dev SQ_ENV_CFG=test electron .\" \"cd desktop-app && ng serve -c test --port 4205\"",
        "start:sidetest": "concurrently \"yarn electron-build && yarn platform-tools && wait-on http-get://localhost:4205/ && cross-env NODE_ENV=dev SQ_ENV_CFG=test electron .\" \"cd desktop-app && ng serve -c test --port 4205\"",
        "start:test2": "concurrently \"yarn electron-build && yarn platform-tools && wait-on http-get://localhost:4205/ && cross-env NODE_ENV=dev SQ_ENV_CFG=test2 electron .\" \"cd desktop-app && ng serve -c test2 --port 4205\"",
        "start:local": "concurrently \"yarn electron-build && yarn platform-tools && wait-on http-get://localhost:4205/ && cross-env NODE_ENV=dev SQ_ENV_CFG=local electron .\" \"cd desktop-app && ng serve -c local --port 4205\"",
        "start:localhost": "concurrently \"yarn electron-build && yarn platform-tools && wait-on http-get://localhost:4205/ && cross-env NODE_ENV=dev SQ_ENV_CFG=localhost electron .\" \"cd desktop-app && ng serve -c localhost --port 4205\"",
        "postinstall": "electron-builder install-app-deps && cd desktop-app && yarn install",
        "dist": "yarn electron-build && yarn platform-tools && yarn app-build && node build-electron/make-config && env-cmd --silent electron-builder --publish onTagOrDraft",
        "build:win": "yarn electron-build && yarn platform-tools && yarn app-build && node build-electron/make-config && cross-env NODE_ENV=production electron-builder --win",
        "build:linux": "yarn electron-build && yarn platform-tools && yarn app-build && node build-electron/make-config && cross-env NODE_ENV=production electron-builder --linux",
        "build:mac": "yarn electron-build && yarn platform-tools && yarn app-build && node build-electron/make-config && cross-env NODE_ENV=production electron-builder --mac",
        "dist:test": "yarn electron-build && yarn platform-tools && yarn app-build-test && node build-electron/make-config test && cross-env NODE_ENV=production SQ_ENV_CFG=test electron-builder",
        "dist:sidetest": "yarn electron-build && yarn platform-tools && yarn app-build-test && node build-electron/make-config test && cross-env NODE_ENV=production SQ_ENV_CFG=test electron-builder",
        "dist:fried": "yarn electron-build && yarn platform-tools && yarn app-build-fried && node build-electron/make-config fried && cross-env NODE_ENV=production SQ_ENV_CFG=fried electron-builder",
        "dist:localhost": "yarn electron-build && yarn platform-tools && yarn app-build-localhost && node build-electron/make-config localhost && cross-env SQ_ENV_CFG=localhost electron-builder --linux",
        "angular": "cd desktop-app && ng serve --port 4205",
        "angular:test": "cd desktop-app && ng serve -c test --port 4205",
        "angular:test2": "cd desktop-app && ng serve -c test2 --port 4205",
        "angular:local": "cd desktop-app && ng serve -c local --port 4205",
        "electron-dev": "yarn platform-tools && cross-env NODE_ENV=dev electron .",
        "electron-dev:test": "yarn platform-tools && cross-env NODE_ENV=dev SQ_ENV_CFG=test electron .",
        "electron-dev:test2": "yarn platform-tools && cross-env NODE_ENV=dev SQ_ENV_CFG=test2 electron .",
        "electron-dev:local": "yarn platform-tools && cross-env NODE_ENV=dev SQ_ENV_CFG=local electron .",
        "electron": "yarn electron-build && yarn electron-dev",
        "app-build": "cd desktop-app && ng build -c production --aot && cd ..",
        "app-build-test": "cd desktop-app && ng build -c test --aot && cd ..",
        "app-build-fried": "cd desktop-app && ng build -c fried --aot && cd ..",
        "app-build-localhost": "cd desktop-app && ng build -c localhost --aot && cd ..",
        "platform-tools": "node build-electron/platform-tools.js",
        "electron-build": "tsc",
        "reset": "rm -rf node_modules && rm -rf desktop-app/node_modules && yarn install && cd desktop-app && yarn install",
        "pretty-quick": "pretty-quick --staged --pattern \"**/*.*(js|jsx|ts|tsx)\""
    },
    "build": {
        "productName": "SideQuest",
        "appId": "com.sidequestvr.app",
        "mac": {
            "category": "public.app-category.utilities",
            "target": {
                "target": "dmg",
                "arch": [
                    "arm64",
                    "x64"
                ]
            },
            "notarize": {
                "teamId": "778YBN5YK7"
            }
        },
        "win": {
            "artifactName": "${productName}-${version}-${arch}-${os}.${ext}",
            "sign": "./build/windows-codesign.js",
            "publish": [
                "github"
            ],
            "target": [
                "nsis"
            ]
        },
        "linux": {
            "target": [
                "tar.xz"
            ]
        },
        "nsis": {
            "artifactName": "${productName} Setup ${version}-x64-${os}.${ext}",
            "oneClick": false,
            "allowToChangeInstallationDirectory": true,
            "include": "build/uninstaller.nsh"
        },
        "files": [
            "build/**/*",
            "node_modules/**/*",
            "package.json",
            "build-electron/app.js",
            "build-electron/download.js",
            "build-electron/upload.js",
            "build-electron/setproperties.js",
            "build-electron/state-storage.js",
            "build-electron/window.js",
            "build-electron/env-config.js",
            "build-electron/external-urls.js",
            "build-electron/config.js"
        ],
        "asarUnpack": [
            "build/**/*"
        ]
    },
    "husky": { 
        "hooks": {
            "pre-commit": "pretty-quick --staged --pattern \"**/*.*(js|jsx|ts|tsx)\"",
            "post-commit": "git update-index -g",
            "pre-push": "yarn dist"
        }
    },
    "prettier": {
        "tabWidth": 4,
        "printWidth": 132,
        "semi": true,
        "jsxBracketSameLine": true,
        "parser": "typescript",
        "singleQuote": true,
        "useTabs": false,
        "trailingComma": "es5"
    },
    "dependencies": {
        "@devicefarmer/adbkit": "^3.2.6",
        "@electron/remote": "^2.1.2",
        "@types/electron": "^1.6.10",
        "adm-zip": "^0.5.10",
        "bytenode": "^1.5.3",
        "crypto": "^1.0.1",
        "electron-updater": "^6.1.8",
        "env-cmd": "^10.1.0",
        "express": "^4.17.3",
        "extract-zip": "^2.0.1",
        "got": "11.8.6",
        "md5": "^2.3.0",
        "mkdirp": "^3.0.1",
        "node-stream-zip": "^1.15.0",
        "opn": "^6.0.0",
        "ping": "^0.4.4",
        "request": "^2.88.2",
        "request-progress": "^3.0.0",
        "semver": "^7.6.0",
        "targz": "^1.0.1",
        "usb-detection2": "https://github.com/SideQuestVR/node-usb-detection",
        "wait-on": "^7.2.0",
        "yauzl": "^3.1.0"
    },
    "devDependencies": {
        "@angular/cli": "^17.1.3",
        "@electron/notarize": "^2.2.1",
        "concurrently": "^8.2.2",
        "cross-env": "^7.0.3",
        "electron": "29.3.1",
        "electron-builder": "24.13.3",
        "husky": "^9.0.11",
        "prettier": "3.2.5",
        "pretty-quick": "^4.0.0",
        "ts-loader": "^9.5.1",
        "typescript": "^5.3.3"
    },
    "resolutions": {
        "nan": "2.19.0",
        "node-abi": "3.57.0",
        "node-gyp": "10.1.0",
        "prebuild-install": "7.1.2",
        "prebuild": "13.0.0"
    },
    "unused": {
    }
}
